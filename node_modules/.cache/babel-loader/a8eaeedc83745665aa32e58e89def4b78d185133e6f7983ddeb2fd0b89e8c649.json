{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Desktop\\\\react12\\\\game\\\\src\\\\component\\\\Game.jsx\",\n  _s = $RefreshSig$();\n// src/components/Game.js\nimport React, { useEffect, useState } from 'react';\nimport VirtualKeyboard from './VirtualKeyboard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getrandomWord } from '../redux/slices/randomword';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [gameWon, setGameWon] = useState(false);\n  const [attemptsHistory, setAttemptsHistory] = useState([]);\n  const dispatch = useDispatch();\n  const word = useSelector(state => state.RandomWord.randomWord);\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [attempts, setAttempts] = useState(0);\n  console.log(\"Word is\", word);\n  useEffect(() => {\n    dispatch(getrandomWord());\n  }, [dispatch]);\n  useEffect(() => {\n    if (word && word.length >= 7 && word.split('').every(letter => guessedLetters.includes(letter))) {\n      setGameWon(true);\n    }\n  }, [guessedLetters, word]);\n  const handleLetterClick = letter => {\n    const newGuessedLetters = [...guessedLetters, letter];\n    console.log(newGuessedLetters);\n    const newAttempts = attempts + 1;\n    setGuessedLetters(newGuessedLetters);\n    setAttempts(newAttempts);\n    const currentWordState = word.split('').map(letter => newGuessedLetters.includes(letter) ? letter : '_').join('');\n    const remainingLetters = word.split('').filter(letter => !newGuessedLetters.includes(letter)).length;\n    if (attemptsHistory.length == 0) {\n      setAttemptsHistory([{\n        attempt: newAttempts,\n        remainingLetters,\n        currentWordState,\n        newGuessedLetters\n      }]);\n    } else {\n      setAttemptsHistory([...attemptsHistory, {\n        attempt: newAttempts,\n        remainingLetters,\n        currentWordState,\n        newGuessedLetters\n      }]);\n    }\n    console.log(\"Attempt History is equal to\", attemptsHistory);\n  };\n  const handleTableClick = attempt => {\n    const selectedAttempt = attemptsHistory.find(item => item.attempt === attempt);\n    console.log(selectedAttempt);\n    // if (selectedAttempt) {\n    //     setGuessedLetters(attemptsHistory.newGuessedLetters);\n    //     setAttempts(selectedAttempt.attempt);\n\n    //     setGameWon(false); // Reset game won state\n    //   }\n  };\n  const displayWord = word ? word.split('').map(letter => guessedLetters.includes(letter) ? letter : '_').join(' ') : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: word && word.length >= 7 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Guess the word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: displayWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VirtualKeyboard, {\n        onLetterClick: handleLetterClick,\n        disabledLetters: guessedLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Attempts: \", attempts]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), gameWon && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Congratulations! You have guessed the word in \", attempts, \" attempts.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Attempt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Remaining Letters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: attemptsHistory.map(({\n            attempt,\n            remainingLetters\n          }, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleTableClick(attempt),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: attempt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: remainingLetters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"D8h6E/yhQNIuOV6oru/kmTbemeU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","VirtualKeyboard","useSelector","useDispatch","getrandomWord","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","gameWon","setGameWon","attemptsHistory","setAttemptsHistory","dispatch","word","state","RandomWord","randomWord","guessedLetters","setGuessedLetters","attempts","setAttempts","console","log","length","split","every","letter","includes","handleLetterClick","newGuessedLetters","newAttempts","currentWordState","map","join","remainingLetters","filter","attempt","handleTableClick","selectedAttempt","find","item","displayWord","children","fileName","_jsxFileName","lineNumber","columnNumber","onLetterClick","disabledLetters","index","onClick","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Desktop/react12/game/src/component/Game.jsx"],"sourcesContent":["// src/components/Game.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport VirtualKeyboard from './VirtualKeyboard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getrandomWord } from '../redux/slices/randomword';\r\n\r\nconst Game = () => {\r\n  const [gameWon, setGameWon] = useState(false);\r\n  const [attemptsHistory, setAttemptsHistory] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const word = useSelector((state) => state.RandomWord.randomWord);\r\n  const [guessedLetters, setGuessedLetters] = useState([]);\r\n  const [attempts, setAttempts] = useState(0);\r\n    console.log(\"Word is\",word)\r\n  useEffect(() => {\r\n    dispatch(getrandomWord());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (word && word.length >= 7 && word.split('').every(letter => guessedLetters.includes(letter))) {\r\n      setGameWon(true);\r\n    }\r\n  }, [guessedLetters, word]);\r\n\r\n  const handleLetterClick = (letter) => {\r\n   \r\n      const newGuessedLetters = [...guessedLetters, letter];\r\n      console.log(newGuessedLetters);\r\n      const newAttempts = attempts + 1;\r\n      setGuessedLetters(newGuessedLetters);\r\n      setAttempts(newAttempts);\r\n\r\n      const currentWordState = word.split('').map((letter) =>\r\n        newGuessedLetters.includes(letter) ? letter : '_'\r\n      ).join('');\r\n\r\n      const remainingLetters = word.split('').filter(letter => !newGuessedLetters.includes(letter)).length;\r\n      if(attemptsHistory.length==0)\r\n        {\r\n            setAttemptsHistory([{ attempt: newAttempts, remainingLetters,currentWordState,newGuessedLetters }])\r\n        }\r\n        else\r\n        {\r\n      setAttemptsHistory([...attemptsHistory, { attempt: newAttempts, remainingLetters,currentWordState,newGuessedLetters }]);\r\n        }\r\n      console.log(\"Attempt History is equal to\",attemptsHistory)\r\n\r\n    \r\n  };\r\n  const handleTableClick=(attempt)=>\r\n    {\r\n        const selectedAttempt = attemptsHistory.find(item => item.attempt === attempt);\r\n        console.log(selectedAttempt)\r\n        // if (selectedAttempt) {\r\n        //     setGuessedLetters(attemptsHistory.newGuessedLetters);\r\n        //     setAttempts(selectedAttempt.attempt);\r\n\r\n        //     setGameWon(false); // Reset game won state\r\n        //   }\r\n    }\r\n\r\n  const displayWord = word ? word.split('').map((letter) => (\r\n    guessedLetters.includes(letter) ? letter : '_'\r\n  )).join(' ') : '';\r\n\r\n  return (\r\n    <div>\r\n      {word && word.length >= 7 ? (\r\n        <>\r\n          <h1>Guess the word</h1>\r\n          <p>{displayWord}</p>\r\n          <VirtualKeyboard onLetterClick={handleLetterClick} disabledLetters={guessedLetters} />\r\n          <p>Attempts: {attempts}</p>\r\n          {gameWon && <p>Congratulations! You have guessed the word in {attempts} attempts.</p>}\r\n          \r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Attempt</th>\r\n                <th>Remaining Letters</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {attemptsHistory.map(({ attempt, remainingLetters }, index) => (\r\n                    <tr key={index} onClick={() => handleTableClick(attempt)} style={{ cursor: 'pointer' }}>\r\n                    <td>{attempt}</td>\r\n                    <td>{remainingLetters}</td>\r\n                  </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}