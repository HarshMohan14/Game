{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Desktop\\\\react12\\\\game\\\\src\\\\component\\\\Game.jsx\",\n  _s = $RefreshSig$();\n// src/components/Game.js\nimport React, { useEffect, useState } from 'react';\nimport VirtualKeyboard from './VirtualKeyboard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport randomword, { getrandomWord } from '../redux/slices/randomword';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const dispatch = useDispatch();\n  const word = useSelector(state => state.RandomWord);\n  useEffect(() => {\n    dispatch(getrandomWord());\n  }, [dispatch]);\n  console.log(\"Word is\", word);\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [attempts, setAttempts] = useState(0);\n  const handleLetterClick = letter => {\n    if (!guessedLetters.includes(letter)) {\n      setGuessedLetters([...guessedLetters, letter]);\n      setAttempts(attempts + 1);\n    }\n  };\n  const displayWord = word;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: word && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Guess the word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: displayWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(VirtualKeyboard, {\n        onLetterClick: handleLetterClick,\n        disabledLetters: guessedLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Attempts: \", attempts]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"zCRGYgvsXSY9OG7Rn2SKt8OpK1Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","VirtualKeyboard","useSelector","useDispatch","randomword","getrandomWord","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","dispatch","word","state","RandomWord","console","log","guessedLetters","setGuessedLetters","attempts","setAttempts","handleLetterClick","letter","includes","displayWord","children","fileName","_jsxFileName","lineNumber","columnNumber","onLetterClick","disabledLetters","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Desktop/react12/game/src/component/Game.jsx"],"sourcesContent":["// src/components/Game.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport VirtualKeyboard from './VirtualKeyboard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport randomword, { getrandomWord } from '../redux/slices/randomword';\r\nconst Game = () => {\r\n    const dispatch = useDispatch();\r\n    const word = useSelector((state) => state.RandomWord);\r\n    useEffect(() => {\r\n        dispatch(getrandomWord());\r\n      }, [dispatch]);\r\n      console.log(\"Word is\",word)\r\n  const [guessedLetters, setGuessedLetters] = useState([]);\r\n  const [attempts, setAttempts] = useState(0);\r\n\r\n  const handleLetterClick = (letter) => {\r\n    if (!guessedLetters.includes(letter)) {\r\n      setGuessedLetters([...guessedLetters, letter]);\r\n      setAttempts(attempts + 1);\r\n    }\r\n  };\r\n\r\n  const displayWord = word\r\n\r\n  return (\r\n    <div>{word&&<>\r\n          <h1>Guess the word</h1>\r\n      <p>{displayWord}</p>\r\n      <VirtualKeyboard onLetterClick={handleLetterClick} disabledLetters={guessedLetters} />\r\n      <p>Attempts: {attempts}</p>\r\n    </>}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,UAAU,IAAIC,aAAa,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACvE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,IAAI,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,UAAU,CAAC;EACrDhB,SAAS,CAAC,MAAM;IACZa,QAAQ,CAACP,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACO,QAAQ,CAAC,CAAC;EACdI,OAAO,CAACC,GAAG,CAAC,SAAS,EAACJ,IAAI,CAAC;EAC/B,MAAM,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMsB,iBAAiB,GAAIC,MAAM,IAAK;IACpC,IAAI,CAACL,cAAc,CAACM,QAAQ,CAACD,MAAM,CAAC,EAAE;MACpCJ,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEK,MAAM,CAAC,CAAC;MAC9CF,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;IAC3B;EACF,CAAC;EAED,MAAMK,WAAW,GAAGZ,IAAI;EAExB,oBACEN,OAAA;IAAAmB,QAAA,EAAMb,IAAI,iBAAEN,OAAA,CAAAE,SAAA;MAAAiB,QAAA,gBACNnB,OAAA;QAAAmB,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BvB,OAAA;QAAAmB,QAAA,EAAID;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBvB,OAAA,CAACN,eAAe;QAAC8B,aAAa,EAAET,iBAAkB;QAACU,eAAe,EAAEd;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtFvB,OAAA;QAAAmB,QAAA,GAAG,YAAU,EAACN,QAAQ;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV,CAAC;AAACnB,EAAA,CA7BID,IAAI;EAAA,QACWP,WAAW,EACfD,WAAW;AAAA;AAAA+B,EAAA,GAFtBvB,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}