{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Desktop\\\\react12\\\\game\\\\src\\\\component\\\\Game.jsx\",\n  _s = $RefreshSig$();\n// src/components/Game.js\nimport React, { useEffect, useState } from 'react';\nimport VirtualKeyboard from './VirtualKeyboard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const dispatch = useDispatch();\n  const word = useSelector(state => state.randomWord.word);\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [attempts, setAttempts] = useState(0);\n  const [gameWon, setGameWon] = useState(false);\n  useEffect(() => {\n    dispatch(getrandomWord());\n  }, [dispatch]);\n  useEffect(() => {\n    if (word && word.length >= 7 && word.split('').every(letter => guessedLetters.includes(letter))) {\n      setGameWon(true);\n    }\n  }, [guessedLetters, word]);\n  const handleLetterClick = letter => {\n    if (!guessedLetters.includes(letter)) {\n      setGuessedLetters([...guessedLetters, letter]);\n      setAttempts(attempts + 1);\n    }\n  };\n  const displayWord = word ? word.split('').map((letter, index) => guessedLetters.includes(letter) ? letter : '_').join(' ') : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: word && word.length >= 7 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Guess the word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: displayWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VirtualKeyboard, {\n        onLetterClick: handleLetterClick,\n        disabledLetters: guessedLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Attempts: \", attempts]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), gameWon && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Congratulations! You have guessed the word in \", attempts, \" attempts.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"oBmASKhiiUjpi+4QTfIOHR1xhIk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","VirtualKeyboard","useSelector","useDispatch","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","dispatch","word","state","randomWord","guessedLetters","setGuessedLetters","attempts","setAttempts","gameWon","setGameWon","getrandomWord","length","split","every","letter","includes","handleLetterClick","displayWord","map","index","join","children","fileName","_jsxFileName","lineNumber","columnNumber","onLetterClick","disabledLetters","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Desktop/react12/game/src/component/Game.jsx"],"sourcesContent":["// src/components/Game.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport VirtualKeyboard from './VirtualKeyboard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nconst Game = () => {\r\n  const dispatch = useDispatch();\r\n  const word = useSelector((state) => state.randomWord.word);\r\n  const [guessedLetters, setGuessedLetters] = useState([]);\r\n  const [attempts, setAttempts] = useState(0);\r\n  const [gameWon, setGameWon] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getrandomWord());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (word && word.length >= 7 && word.split('').every(letter => guessedLetters.includes(letter))) {\r\n      setGameWon(true);\r\n    }\r\n  }, [guessedLetters, word]);\r\n\r\n  const handleLetterClick = (letter) => {\r\n    if (!guessedLetters.includes(letter)) {\r\n      setGuessedLetters([...guessedLetters, letter]);\r\n      setAttempts(attempts + 1);\r\n    }\r\n  };\r\n\r\n  const displayWord = word ? word.split('').map((letter, index) => (\r\n    guessedLetters.includes(letter) ? letter : '_'\r\n  )).join(' ') : '';\r\n\r\n  return (\r\n    <div>\r\n      {word && word.length >= 7 && (\r\n        <>\r\n          <h1>Guess the word</h1>\r\n          <p>{displayWord}</p>\r\n          <VirtualKeyboard onLetterClick={handleLetterClick} disabledLetters={guessedLetters} />\r\n          <p>Attempts: {attempts}</p>\r\n          {gameWon && <p>Congratulations! You have guessed the word in {attempts} attempts.</p>}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}