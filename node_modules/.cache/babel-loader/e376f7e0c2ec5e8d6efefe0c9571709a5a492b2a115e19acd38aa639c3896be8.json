{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Desktop\\\\react12\\\\game\\\\src\\\\component\\\\Game.jsx\",\n  _s = $RefreshSig$();\n// src/components/Game.js\nimport React, { useEffect, useState } from 'react';\nimport VirtualKeyboard from './VirtualKeyboard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport randomword from '../redux/slices/randomword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const dispatch = useDispatch();\n  const word = useSelector(state => state.RandomWord);\n  useEffect(() => {\n    dispatch(randomword());\n  }, [dispatch]);\n  console.log(\"Word is\", word);\n  //   const [guessedLetters, setGuessedLetters] = useState([]);\n  //   const [attempts, setAttempts] = useState(0);\n\n  //   const handleLetterClick = (letter) => {\n  //     if (!guessedLetters.includes(letter)) {\n  //       setGuessedLetters([...guessedLetters, letter]);\n  //       setAttempts(attempts + 1);\n  //     }\n  //   };\n\n  //   const displayWord = word.split('').map((letter, index) => (\n  //     guessedLetters.includes(letter) ? letter : '_'\n  //   )).join(' ');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"Prn5jEybygVm+n6+VJ+KffPU7Jc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","VirtualKeyboard","useSelector","useDispatch","randomword","jsxDEV","_jsxDEV","Game","_s","dispatch","word","state","RandomWord","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Desktop/react12/game/src/component/Game.jsx"],"sourcesContent":["// src/components/Game.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport VirtualKeyboard from './VirtualKeyboard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport randomword from '../redux/slices/randomword';\r\nconst Game = () => {\r\n    const dispatch = useDispatch();\r\n    const word = useSelector((state) => state.RandomWord);\r\n    useEffect(() => {\r\n        dispatch(randomword());\r\n      }, [dispatch]);\r\n      console.log(\"Word is\",word)\r\n//   const [guessedLetters, setGuessedLetters] = useState([]);\r\n//   const [attempts, setAttempts] = useState(0);\r\n\r\n//   const handleLetterClick = (letter) => {\r\n//     if (!guessedLetters.includes(letter)) {\r\n//       setGuessedLetters([...guessedLetters, letter]);\r\n//       setAttempts(attempts + 1);\r\n//     }\r\n//   };\r\n\r\n//   const displayWord = word.split('').map((letter, index) => (\r\n//     guessedLetters.includes(letter) ? letter : '_'\r\n//   )).join(' ');\r\n\r\n  return (\r\n    <div>\r\n      {/* <h1>Guess the word</h1>\r\n      <p>{displayWord}</p>\r\n      <VirtualKeyboard onLetterClick={handleLetterClick} disabledLetters={guessedLetters} />\r\n      <p>Attempts: {attempts}</p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,IAAI,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,UAAU,CAAC;EACrDb,SAAS,CAAC,MAAM;IACZU,QAAQ,CAACL,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACK,QAAQ,CAAC,CAAC;EACdI,OAAO,CAACC,GAAG,CAAC,SAAS,EAACJ,IAAI,CAAC;EACjC;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEE,oBACEJ,OAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKK,CAAC;AAEV,CAAC;AAACV,EAAA,CA7BID,IAAI;EAAA,QACWJ,WAAW,EACfD,WAAW;AAAA;AAAAiB,EAAA,GAFtBZ,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}